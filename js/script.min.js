document.addEventListener('DOMContentLoaded', () => { document.body.classList.add('loaded'); const header = document.querySelector('.site-header'); if (!header) return; const toggle = header.querySelector('.menu-toggle'); const nav = header.querySelector('.main-nav'); if (!toggle || !nav) return; let lastFocus = null; function setOpen(open) { nav.classList.toggle('open', open); toggle.setAttribute('aria-expanded', open); toggle.setAttribute('aria-label', open ? 'Fermer' : 'Menu'); document.body.classList.toggle('menu-open', open); toggle.textContent = open ? 'Fermer' : 'Menu'; if (open) { lastFocus = document.activeElement; const firstLink = nav.querySelector('a'); if (firstLink) firstLink.focus(); } else if (lastFocus) { lastFocus.focus(); } } toggle.addEventListener('click', () => { const open = nav.classList.contains('open'); setOpen(!open); }); document.addEventListener('keydown', (e) => { if (e.key === 'Escape' && nav.classList.contains('open')) { setOpen(false); return; } if (e.key === 'Tab' && nav.classList.contains('open')) { const focusables = nav.querySelectorAll('a, button'); if (focusables.length === 0) return; const first = focusables[0]; const last = focusables[focusables.length - 1]; if (e.shiftKey && document.activeElement === first) { e.preventDefault(); last.focus(); } else if (!e.shiftKey && document.activeElement === last) { e.preventDefault(); first.focus(); } } }); }); window.addEventListener('pageshow', (event) => { if (event.persisted) { document.body.classList.add('loaded'); } }); document.addEventListener('DOMContentLoaded', () => { const button = document.querySelector('.load-more'); const grid = document.querySelector('.card-grid'); if (!button || !grid || button.hidden) return; let nextPage = 2; const defaultText = button.textContent; button.addEventListener('click', async () => { button.disabled = true; button.textContent = 'Chargementâ€¦'; try { const res = await fetch(`/blog/page-${nextPage}.html`); if (!res.ok) throw new Error('no more'); const html = await res.text(); const doc = new DOMParser().parseFromString(html, 'text/html'); const articles = doc.querySelectorAll('.card-grid .card'); articles.forEach((article) => grid.appendChild(article)); nextPage++; button.disabled = false; button.textContent = defaultText; if (!doc.querySelector('.load-more')) { button.hidden = true; } } catch (err) { button.textContent = "Plus d'articles"; setTimeout(() => { button.hidden = true; }, 1500); } }); });